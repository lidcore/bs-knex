// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Knex = require("knex");
var BsCallback = require("bs-callback/src/bsCallback.js");

function init(param) {
  var config = param[1];
  config.client = "pg";
  return Knex(config);
}

function BuildQuery(funarg) {
  var client = funarg[/* client */0];
  var knex = function (table) {
    return funarg[/* client */0](table);
  };
  var first = function (t) {
    var partial_arg = t.first();
    return (function (param) {
        return BsCallback.from_promise(partial_arg, param);
      });
  };
  var select = (function (knex, args) {
    return knex.select.apply(knex, args);
  });
  var select$1 = function (t, $staropt$star) {
    var columns = $staropt$star ? $staropt$star[0] : /* array */[];
    var partial_arg = select(t, columns);
    return (function (param) {
        return BsCallback.from_promise(partial_arg, param);
      });
  };
  var update = function (t, args) {
    var partial_arg = t.update(args);
    return (function (param) {
        return BsCallback.from_promise(partial_arg, param);
      });
  };
  var insert = function (t, args) {
    var partial_arg = t.insert(args);
    return (function (param) {
        return BsCallback.from_promise(partial_arg, param);
      });
  };
  return [
          client,
          knex,
          (function (prim, prim$1) {
              return prim.where(prim$1);
            }),
          (function (prim, prim$1) {
              return prim.returning(prim$1);
            }),
          first,
          select$1,
          update,
          insert
        ];
}

exports.init = init;
exports.BuildQuery = BuildQuery;
/* knex Not a pure module */
